We havenbuildings numbered from0ton - 1. Each building has a number of employees. It's transfer season, and some employees want to change the building they reside in.You are given an arrayrequestswhererequests[i] = [fromi, toi]represents an employee's request to transfer from buildingfromito buildingtoi.All buildings are full, so a list of requests is achievable only if for each building, thenet change in employee transfers is zero. This means the number of employeesleavingisequalto the number of employeesmoving in. For example ifn = 3and two employees are leaving building0, one is leaving building1, and one is leaving building2, there should be two employees moving to building0, one employee moving to building1, and one employee moving to building2.Returnthe maximum number of achievable requests.Example 1:Input:n = 5, requests = [[0,1],[1,0],[0,1],[1,2],[2,0],[3,4]]Output:5Explantion:Let's see the requests:
From building 0 we have employees x and y and both want to move to building 1.
From building 1 we have employees a and b and they want to move to buildings 2 and 0 respectively.
From building 2 we have employee z and they want to move to building 0.
From building 3 we have employee c and they want to move to building 4.
From building 4 we don't have any requests.
We can achieve the requests of users x and b by swapping their places.
We can achieve the requests of users y, a and z by swapping the places in the 3 buildings.Example 2:Input:n = 3, requests = [[0,0],[1,2],[2,1]]Output:3Explantion:Let's see the requests:
From building 0 we have employee x and they want to stay in the same building 0.
From building 1 we have employee y and they want to move to building 2.
From building 2 we have employee z and they want to move to building 1.
We can achieve all the requests.Example 3:Input:n = 4, requests = [[0,3],[3,1],[1,2],[2,0]]Output:4Constraints:1 <= n <= 201 <= requests.length <= 16requests[i].length == 20 <= fromi, toi< n