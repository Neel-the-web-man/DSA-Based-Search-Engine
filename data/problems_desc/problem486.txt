You havenrobots. You are given two0-indexedinteger arrays,chargeTimesandrunningCosts, both of lengthn. Theithrobot costschargeTimes[i]units to charge and costsrunningCosts[i]units to run. You are also given an integerbudget.Thetotal costof runningkchosen robots is equal tomax(chargeTimes) + k * sum(runningCosts), wheremax(chargeTimes)is the largest charge cost among thekrobots andsum(runningCosts)is the sum of running costs among thekrobots.Returnthemaximumnumber ofconsecutiverobots you can run such that the total costdoes notexceedbudget.Example 1:Input:chargeTimes = [3,6,1,3,4], runningCosts = [2,1,3,4,5], budget = 25Output:3Explanation:It is possible to run all individual and consecutive pairs of robots within budget.
To obtain answer 3, consider the first 3 robots. The total cost will be max(3,6,1) + 3 * sum(2,1,3) = 6 + 3 * 6 = 24 which is less than 25.
It can be shown that it is not possible to run more than 3 consecutive robots within budget, so we return 3.Example 2:Input:chargeTimes = [11,12,19], runningCosts = [10,8,7], budget = 19Output:0Explanation:No robot can be run that does not exceed the budget, so we return 0.Constraints:chargeTimes.length == runningCosts.length == n1 <= n <= 5 * 1041 <= chargeTimes[i], runningCosts[i] <= 1051 <= budget <= 1015