Given atrianglearray, returnthe minimum path sum from top to bottom.For each step, you may move to an adjacent number of the row below. More formally, if you are on indexion the current row, you may move to either indexior indexi + 1on the next row.Example 1:Input:triangle = [[2],[3,4],[6,5,7],[4,1,8,3]]Output:11Explanation:The triangle looks like:234
 657
418 3
The minimum path sum from top to bottom is 2 + 3 + 5 + 1 = 11 (underlined above).Example 2:Input:triangle = [[-10]]Output:-10Constraints:1 <= triangle.length <= 200triangle[0].length == 1triangle[i].length == triangle[i - 1].length + 1-104<= triangle[i][j] <= 104Follow up:Could youÂ do this using onlyO(n)extra space, wherenis the total number of rows in the triangle?