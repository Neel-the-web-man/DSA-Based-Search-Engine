You are given a stringsand arrayquerieswherequeries[i] = [lefti, righti, ki]. We may rearrange the substrings[lefti...righti]for each query and then choose up tokiof them to replace with any lowercase English letter.If the substring is possible to be a palindrome string after the operations above, the result of the query istrue. Otherwise, the result isfalse.Return a boolean arrayanswerwhereanswer[i]is the result of theithqueryqueries[i].Note that each letter is counted individually for replacement, so if, for examples[lefti...righti] = "aaa", andki= 2, we can only replace two of the letters. Also, note that no query modifies the initial strings.Example :Input:s = "abcda", queries = [[3,3,0],[1,2,0],[0,3,1],[0,3,2],[0,4,1]]Output:[true,false,false,true,true]Explanation:queries[0]: substring = "d", is palidrome.
queries[1]: substring = "bc", is not palidrome.
queries[2]: substring = "abcd", is not palidrome after replacing only 1 character.
queries[3]: substring = "abcd", could be changed to "abba" which is palidrome. Also this can be changed to "baab" first rearrange it "bacd" then replace "cd" with "ab".
queries[4]: substring = "abcda", could be changed to "abcba" which is palidrome.Example 2:Input:s = "lyb", queries = [[0,1,0],[2,2,1]]Output:[false,true]Constraints:1 <= s.length, queries.length <= 1050 <= lefti<= righti< s.length0 <= ki<= s.lengthsconsists of lowercase English letters.