Given two stringssandtof lengthsmandnrespectively, returntheminimum windowsubstringofssuch that every character int(including duplicates) is included in the window. If there is no such substring, returnthe empty string"".The testcases will be generated such that the answer isunique.Example 1:Input:s = "ADOBECODEBANC", t = "ABC"Output:"BANC"Explanation:The minimum window substring "BANC" includes 'A', 'B', and 'C' from string t.Example 2:Input:s = "a", t = "a"Output:"a"Explanation:The entire string s is the minimum window.Example 3:Input:s = "a", t = "aa"Output:""Explanation:Both 'a's from t must be included in the window.
Since the largest window of s only has one 'a', return empty string.Constraints:m == s.lengthn == t.length1 <= m, n <= 105sandtconsist of uppercase and lowercase English letters.Follow up:Could you find an algorithm that runs inO(m + n)time?