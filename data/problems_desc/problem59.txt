You are given an integer arraynumsof lengthn.Assumearrkto be an array obtained by rotatingnumsbykpositions clock-wise. We define therotation functionFonnumsas follow:F(k) = 0 * arrk[0] + 1 * arrk[1] + ... + (n - 1) * arrk[n - 1].Returnthe maximum value ofF(0), F(1), ..., F(n-1).The test cases are generated so that the answer fits in a32-bitinteger.Example 1:Input:nums = [4,3,2,6]Output:26Explanation:F(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25
F(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16
F(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23
F(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26
So the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.Example 2:Input:nums = [100]Output:0Constraints:n == nums.length1 <= n <= 105-100 <= nums[i] <= 100