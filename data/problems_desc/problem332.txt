You are given atree(i.e. a connected, undirected graph that has no cycles)rootedat node0consisting ofnnodes numbered from0ton - 1. The tree is represented by a0-indexedarrayparentof sizen, whereparent[i]is the parent of nodei. Since node0is the root,parent[0] == -1.You are also given a stringsof lengthn, wheres[i]is the character assigned to nodei.Returnthe length of thelongest pathin the tree such that no pair ofadjacentnodes on the path have the same character assigned to them.Example 1:Input:parent = [-1,0,0,1,1,2], s = "abacbe"Output:3Explanation:The longest path where each two adjacent nodes have different characters in the tree is the path: 0 -> 1 -> 3. The length of this path is 3, so 3 is returned.
It can be proven that there is no longer path that satisfies the conditions.Example 2:Input:parent = [-1,0,0,0], s = "aabc"Output:3Explanation:The longest path where each two adjacent nodes have different characters is the path: 2 -> 0 -> 3. The length of this path is 3, so 3 is returned.Constraints:n == parent.length == s.length1 <= n <= 1050 <= parent[i] <= n - 1for alli >= 1parent[0] == -1parentrepresents a valid tree.sconsists of only lowercase English letters.