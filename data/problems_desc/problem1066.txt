There is ann×nn \times nn×ngrid whose each square has some number of coins in it.You know for each row and column how many squares you must choose from that row or column. You get all coins from every square you choose. What is the maximum number of coins you can collect and how could you choose the squares so that the given conditions are satisfied?InputThe first input line has an integernnn: the size of the grid. The rows and columns are numbered1,2,…,n1,2,\dots,n1,2,…,n.The next line hasnnnintegersa1,a2,…,ana_1,a_2,\ldots,a_na1​,a2​,…,an​: You must choose exactlyaia_iai​squares from theiiith row.The next line hasnnnintegersb1,b2,…,bnb_1,b_2,\ldots,b_nb1​,b2​,…,bn​: You must choose exactlybjb_jbj​squares from thejjjth column.Finally, there arennnlines describing the grid. You can assume that the sums ofa1,a2,…,ana_1,a_2,\ldots,a_na1​,a2​,…,an​andb1,b2,…,bnb_1,b_2,\ldots,b_nb1​,b2​,…,bn​are equal.OutputFirst print an integerkkk: the maximum number of coins you can collect. After this printnnnlines describing which squares you choose (Xmeans that you choose a square,.means that you don't choose it).If it is not possible to satisfy the conditions print only−1-1−1.Constraints1≤n≤501 \le n \le 501≤n≤500≤ai≤n0 \le a_i \le n0≤ai​≤n0≤bj≤n0 \le b_j \le n0≤bj​≤n0≤cij≤10000 \le c_{ij} \le 10000≤cij​≤1000ExampleInput:5
0 1 3 2 0
1 2 2 0 1
2 5 1 5 1
0 2 5 1 2
3 8 9 3 5
1 4 3 7 3
0 3 6 2 8Output:32
.....
..X..
.XX.X
XX...
.....