Given an array of integersarr, sort the array by performing a series ofpancake flips.In one pancake flip we do the following steps:Choose an integerkwhere1 <= k <= arr.length.Reverse the sub-arrayarr[0...k-1](0-indexed).For example, ifarr = [3,2,1,4]and we performed a pancake flip choosingk = 3, we reverse the sub-array[3,2,1], soarr = [1,2,3,4]after the pancake flip atk = 3.Returnan array of thek-values corresponding to a sequence of pancake flips that sortarr. Any valid answer that sorts the array within10 * arr.lengthflips will be judged as correct.Example 1:Input:arr = [3,2,4,1]Output:[4,2,4,3]Explanation:We perform 4 pancake flips, with k values 4, 2, 4, and 3.
Starting state: arr = [3, 2, 4, 1]
After 1st flip (k = 4): arr = [1,4,2,3]
After 2nd flip (k = 2): arr = [4,1, 2, 3]
After 3rd flip (k = 4): arr = [3,2,1,4]
After 4th flip (k = 3): arr = [1,2,3, 4], which is sorted.Example 2:Input:arr = [1,2,3]Output:[]Explanation:The input is already sorted, so there is no need to flip anything.
Note that other answers, such as [3, 3], would also be accepted.Constraints:1 <= arr.length <= 1001 <= arr[i] <= arr.lengthAll integers inarrare unique (i.e.arris a permutation of the integers from1toarr.length).