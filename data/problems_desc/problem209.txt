Atransformation sequencefrom wordbeginWordto wordendWordusing a dictionarywordListis a sequence of wordsbeginWord -> s1-> s2-> ... -> sksuch that:Every adjacent pair of words differs by a single letter.Everysifor1 <= i <= kis inwordList. Note thatbeginWorddoes not need to be inwordList.sk== endWordGiven two words,beginWordandendWord, and a dictionarywordList, returnall theshortest transformation sequencesfrombeginWordtoendWord, or an empty list if no such sequence exists. Each sequence should be returned as a list of the words[beginWord, s1, s2, ..., sk].Example 1:Input:beginWord = "hit", endWord = "cog", wordList = ["hot","dot","dog","lot","log","cog"]Output:[["hit","hot","dot","dog","cog"],["hit","hot","lot","log","cog"]]Explanation:There are 2 shortest transformation sequences:
"hit" -> "hot" -> "dot" -> "dog" -> "cog"
"hit" -> "hot" -> "lot" -> "log" -> "cog"Example 2:Input:beginWord = "hit", endWord = "cog", wordList = ["hot","dot","dog","lot","log"]Output:[]Explanation:The endWord "cog" is not in wordList, therefore there is no valid transformation sequence.Constraints:1 <= beginWord.length <= 5endWord.length == beginWord.length1 <= wordList.length <= 500wordList[i].length == beginWord.lengthbeginWord,endWord, andwordList[i]consist of lowercase English letters.beginWord != endWordAll the words inwordListareunique.Thesumof all shortest transformation sequences does not exceed105.