In a project, you have a list of required skillsreq_skills, and a list of people. Theithpersonpeople[i]contains a list of skills that the person has.Consider a sufficient team: a set of people such that for every required skill inreq_skills, there is at least one person in the team who has that skill. We can represent these teams by the index of each person.For example,team = [0, 1, 3]represents the people with skillspeople[0],people[1], andpeople[3].Returnany sufficient team of the smallest possible size, represented by the index of each person. You may return the answer inany order.It isguaranteedan answer exists.Example 1:Input:req_skills = ["java","nodejs","reactjs"], people = [["java"],["nodejs"],["nodejs","reactjs"]]Output:[0,2]Example 2:Input:req_skills = ["algorithms","math","java","reactjs","csharp","aws"], people = [["algorithms","math","java"],["algorithms","math","reactjs"],["java","csharp","aws"],["reactjs","csharp"],["csharp","math"],["aws","java"]]Output:[1,2]Constraints:1 <= req_skills.length <= 161 <= req_skills[i].length <= 16req_skills[i]consists of lowercase English letters.All the strings ofreq_skillsareunique.1 <= people.length <= 600 <= people[i].length <= 161 <= people[i][j].length <= 16people[i][j]consists of lowercase English letters.All the strings ofpeople[i]areunique.Every skill inpeople[i]is a skill inreq_skills.It is guaranteed a sufficient team exists.