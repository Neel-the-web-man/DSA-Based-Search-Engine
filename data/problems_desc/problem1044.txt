There are2n2n2nboxes in a line. Two adjacent boxes are empty, and all other boxes have a letter "A" or "B". Both letters appear in exactlyn−1n-1n−1boxes.Your task is to move the letters so that all letters "A" appear before any letter "B". On each turn you can choose any two adjacent boxes that have a letter and move the letters to the two adjacent empty boxes, preserving their order.It can be proven that either there is a solution that consists of at most10n10n10nturns or there are no solutions.InputThe first line has an integernnn: there are2n2n2nboxes.The second line has a string of2n2n2ncharacters which describes the starting position. Each character is "A", "B" or "." (empty box).OutputFirst print an integerkkk: the number of turns. After this, printkkklines that describe the moves. You can print any solution, as long ask≤1000k \le 1000k≤1000.If there are no solutions, print only "-1".Constraints1≤n≤1001 \le n \le 1001≤n≤100Example 1Input:3
AB..BAOutput:2
ABBA..
A..ABBExample 2Input:3
ABAB..Output:-1