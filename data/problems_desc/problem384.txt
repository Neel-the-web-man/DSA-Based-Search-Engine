You are implementing a program to use as your calendar. We can add a new event if adding the event will not cause adouble booking.Adouble bookinghappens when two events have some non-empty intersection (i.e., some moment is common to both events.).The event can be represented as a pair of integersstartTimeandendTimethat represents a booking on the half-open interval[startTime, endTime), the range of real numbersxsuch thatstartTime <= x < endTime.Implement theMyCalendarclass:MyCalendar()Initializes the calendar object.boolean book(int startTime, int endTime)Returnstrueif the event can be added to the calendar successfully without causing adouble booking. Otherwise, returnfalseand do not add the event to the calendar.Example 1:Input["MyCalendar", "book", "book", "book"]
[[], [10, 20], [15, 25], [20, 30]]Output[null, true, false, true]ExplanationMyCalendar myCalendar = new MyCalendar();
myCalendar.book(10, 20); // return True
myCalendar.book(15, 25); // return False, It can not be booked because time 15 is already booked by another event.
myCalendar.book(20, 30); // return True, The event can be booked, as the first event takes every time less than 20, but not including 20.Constraints:0 <= start < end <= 109At most1000calls will be made tobook.