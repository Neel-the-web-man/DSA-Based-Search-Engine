You are given an undirected weighted graph ofnnodes (0-indexed), represented by an edge list whereedges[i] = [a, b]is an undirected edge connecting the nodesaandbwith a probability of success of traversing that edgesuccProb[i].Given two nodesstartandend, find the path with the maximum probability of success to go fromstarttoendand return its success probability.If there is no path fromstarttoend,returnÂ 0. Your answer will be accepted if it differs from the correct answer by at most1e-5.Example 1:Input:n = 3, edges = [[0,1],[1,2],[0,2]], succProb = [0.5,0.5,0.2], start = 0, end = 2Output:0.25000Explanation:There are two paths from start to end, one having a probability of success = 0.2 and the other has 0.5 * 0.5 = 0.25.Example 2:Input:n = 3, edges = [[0,1],[1,2],[0,2]], succProb = [0.5,0.5,0.3], start = 0, end = 2Output:0.30000Example 3:Input:n = 3, edges = [[0,1]], succProb = [0.5], start = 0, end = 2Output:0.00000Explanation:There is no path between 0 and 2.Constraints:2 <= n <= 10^40 <= start, end < nstart != end0 <= a, b < na != b0 <= succProb.length == edges.length <= 2*10^40 <= succProb[i] <= 1There is at most one edge between every two nodes.