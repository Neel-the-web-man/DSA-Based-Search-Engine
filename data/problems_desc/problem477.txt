You are given a0-indexedarraynumsofnintegers, and an integerk.Thek-radius averagefor a subarray ofnumscenteredat some indexiwith theradiuskis the average ofallelements innumsbetween the indicesi - kandi + k(inclusive). If there are less thankelements beforeorafter the indexi, then thek-radius averageis-1.Build and returnan arrayavgsof lengthnwhereavgs[i]is thek-radius averagefor the subarray centered at indexi.Theaverageofxelements is the sum of thexelements divided byx, usinginteger division. The integer division truncates toward zero, which means losing its fractional part.For example, the average of four elements2,3,1, and5is(2 + 3 + 1 + 5) / 4 = 11 / 4 = 2.75, which truncates to2.Example 1:Input:nums = [7,4,3,9,1,8,5,2,6], k = 3Output:[-1,-1,-1,5,4,4,-1,-1,-1]Explanation:- avg[0], avg[1], and avg[2] are -1 because there are less than k elementsbeforeeach index.
- The sum of the subarray centered at index 3 with radius 3 is: 7 + 4 + 3 + 9 + 1 + 8 + 5 = 37.
  Usinginteger division, avg[3] = 37 / 7 = 5.
- For the subarray centered at index 4, avg[4] = (4 + 3 + 9 + 1 + 8 + 5 + 2) / 7 = 4.
- For the subarray centered at index 5, avg[5] = (3 + 9 + 1 + 8 + 5 + 2 + 6) / 7 = 4.
- avg[6], avg[7], and avg[8] are -1 because there are less than k elementsaftereach index.Example 2:Input:nums = [100000], k = 0Output:[100000]Explanation:- The sum of the subarray centered at index 0 with radius 0 is: 100000.
  avg[0] = 100000 / 1 = 100000.Example 3:Input:nums = [8], k = 100000Output:[-1]Explanation:- avg[0] is -1 because there are less than k elements before and after index 0.Constraints:n == nums.length1 <= n <= 1050 <= nums[i], k <= 105