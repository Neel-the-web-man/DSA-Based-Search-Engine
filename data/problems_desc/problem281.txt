You are given a network ofnnodes represented as ann x nadjacency matrixgraph, where theithnode is directly connected to thejthnode ifgraph[i][j] == 1.Some nodesinitialare initially infected by malware. Whenever two nodes are directly connected, and at least one of those two nodes is infected by malware, both nodes will be infected by malware. This spread of malware will continue until no more nodes can be infected in this manner.SupposeM(initial)is the final number of nodes infected with malware in the entire network after the spread of malware stops.We will removeexactly one nodefrominitial,completely removing it and any connections from this node to any other node.Return the node that, if removed, would minimizeM(initial). If multiple nodes could be removed to minimizeM(initial), return such a node withthe smallest index.Example 1:Input:graph = [[1,1,0],[1,1,0],[0,0,1]], initial = [0,1]Output:0Example 2:Input:graph = [[1,1,0],[1,1,1],[0,1,1]], initial = [0,1]Output:1Example 3:Input:graph = [[1,1,0,0],[1,1,1,0],[0,1,1,1],[0,0,1,1]], initial = [0,1]Output:1Constraints:n == graph.lengthn == graph[i].length2 <= n <= 300graph[i][j]is0or1.graph[i][j] == graph[j][i]graph[i][i] == 11 <= initial.length <Â n0 <= initial[i] <= n - 1All the integers ininitialareunique.