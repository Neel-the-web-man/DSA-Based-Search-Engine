(This problem is aninteractive problem.)You may recall that an arrayarris amountain arrayif and only if:arr.length >= 3There exists someiwith0 < i < arr.length - 1such that:arr[0] < arr[1] < ... < arr[i - 1] < arr[i]arr[i] > arr[i + 1] > ... > arr[arr.length - 1]Given a mountain arraymountainArr, return theminimumindexsuch thatmountainArr.get(index) == target. If such anindexdoes not exist, return-1.You cannot access the mountain array directly.You may only access the array using aMountainArrayinterface:MountainArray.get(k)returns the element of the array at indexk(0-indexed).MountainArray.length()returns the length of the array.Submissions making more than100calls toMountainArray.getwill be judgedWrong Answer. Also, any solutions that attempt to circumvent the judge will result in disqualification.Example 1:Input:mountainArr = [1,2,3,4,5,3,1], target = 3Output:2Explanation:3 exists in the array, at index=2 and index=5. Return the minimum index, which is 2.Example 2:Input:mountainArr = [0,1,2,4,2,1], target = 3Output:-1Explanation:3 does not exist inthe array,so we return -1.Constraints:3 <= mountainArr.length() <= 1040 <= target <= 1090 <= mountainArr.get(index) <= 109