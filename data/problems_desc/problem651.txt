With respect to a givenpuzzlestring, awordisvalidif both the following conditions are satisfied:wordcontains the first letter ofpuzzle.For each letter inword, that letter is inpuzzle.For example, if the puzzle is"abcdefg", then valid words are"faced","cabbage", and"baggage", whileinvalid words are"beefed"(does not include'a') and"based"(includes's'which is not in the puzzle).Returnan arrayanswer, whereanswer[i]is the number of words in the given word listwordsthat is valid with respect to the puzzlepuzzles[i].Example 1:Input:words = ["aaaa","asas","able","ability","actt","actor","access"], puzzles = ["aboveyz","abrodyz","abslute","absoryz","actresz","gaswxyz"]Output:[1,1,3,2,4,0]Explanation:1 valid word for "aboveyz" : "aaaa" 
1 valid word for "abrodyz" : "aaaa"
3 valid words for "abslute" : "aaaa", "asas", "able"
2 valid words for "absoryz" : "aaaa", "asas"
4 valid words for "actresz" : "aaaa", "asas", "actt", "access"
There are no valid words for "gaswxyz" cause none of the words in the list contains letter 'g'.Example 2:Input:words = ["apple","pleas","please"], puzzles = ["aelwxyz","aelpxyz","aelpsxy","saelpxy","xaelpsy"]Output:[0,1,3,2,0]Constraints:1 <= words.length <= 1054 <= words[i].length <= 501 <= puzzles.length <= 104puzzles[i].length == 7words[i]andpuzzles[i]consist of lowercase English letters.Eachpuzzles[i]does not contain repeated characters.