You are given a0-indexedarraynumsof lengthn, consisting of non-negative integers. For each indexifrom0ton - 1, you must determine the size of theminimum sizednon-empty subarray ofnumsstarting ati(inclusive) that has themaximumpossiblebitwise OR.In other words, letBijbe the bitwise OR of the subarraynums[i...j]. You need to find the smallest subarray starting ati, such that bitwise OR of this subarray is equal tomax(Bik)wherei <= k <= n - 1.The bitwise OR of an array is the bitwise OR of all the numbers in it.Returnan integer arrayanswerof sizenwhereanswer[i]is the length of theminimumsized subarray starting atiwithmaximumbitwise OR.Asubarrayis a contiguous non-empty sequence of elements within an array.Example 1:Input:nums = [1,0,2,1,3]Output:[3,3,2,2,1]Explanation:The maximum possible bitwise OR starting at any index is 3. 
- Starting at index 0, the shortest subarray that yields it is [1,0,2].
- Starting at index 1, the shortest subarray that yields the maximum bitwise OR is [0,2,1].
- Starting at index 2, the shortest subarray that yields the maximum bitwise OR is [2,1].
- Starting at index 3, the shortest subarray that yields the maximum bitwise OR is [1,3].
- Starting at index 4, the shortest subarray that yields the maximum bitwise OR is [3].
Therefore, we return [3,3,2,2,1].Example 2:Input:nums = [1,2]Output:[2,1]Explanation:Starting at index 0, the shortest subarray that yields the maximum bitwise OR is of length 2.
Starting at index 1, the shortest subarray that yields the maximum bitwise OR is of length 1.
Therefore, we return [2,1].Constraints:n == nums.length1 <= n <= 1050 <= nums[i] <= 109