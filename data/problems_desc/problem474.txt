You are given a0-indexedinteger arraynums, wherenums[i]represents the score of theithstudent. You are also given an integerk.Pick the scores of anykstudents from the array so that thedifferencebetween thehighestand thelowestof thekscores isminimized.Returntheminimumpossible difference.Example 1:Input:nums = [90], k = 1Output:0Explanation:There is one way to pick score(s) of one student:
- [90]. The difference between the highest and lowest score is 90 - 90 = 0.
The minimum possible difference is 0.Example 2:Input:nums = [9,4,1,7], k = 2Output:2Explanation:There are six ways to pick score(s) of two students:
- [9,4,1,7]. The difference between the highest and lowest score is 9 - 4 = 5.
- [9,4,1,7]. The difference between the highest and lowest score is 9 - 1 = 8.
- [9,4,1,7]. The difference between the highest and lowest score is 9 - 7 = 2.
- [9,4,1,7]. The difference between the highest and lowest score is 4 - 1 = 3.
- [9,4,1,7]. The difference between the highest and lowest score is 7 - 4 = 3.
- [9,4,1,7]. The difference between the highest and lowest score is 7 - 1 = 6.
The minimum possible difference is 2.Constraints:1 <= k <= nums.length <= 10000 <= nums[i] <= 105