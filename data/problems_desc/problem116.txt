You are given anm x ninteger arraygrid. There is a robot initially located at thetop-left corner(i.e.,grid[0][0]). The robot tries to move to thebottom-right corner(i.e.,grid[m - 1][n - 1]). The robot can only move either down or right at any point in time.An obstacle and space are marked as1or0respectively ingrid. A path that the robot takes cannot includeanysquare that is an obstacle.Returnthe number of possible unique paths that the robot can take to reach the bottom-right corner.The testcases are generated so that the answer will be less than or equal to2 * 109.Example 1:Input:obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]Output:2Explanation:There is one obstacle in the middle of the 3x3 grid above.
There are two ways to reach the bottom-right corner:
1. Right -> Right -> Down -> Down
2. Down -> Down -> Right -> RightExample 2:Input:obstacleGrid = [[0,1],[0,0]]Output:1Constraints:m == obstacleGrid.lengthn == obstacleGrid[i].length1 <= m, n <= 100obstacleGrid[i][j]is0or1.