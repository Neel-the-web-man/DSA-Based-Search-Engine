You are given an integern, the number of nodes in a directed graph where the nodes are labeled from0ton - 1. Each edge is red or blue in this graph, and there could be self-edges and parallel edges.You are given two arraysredEdgesandblueEdgeswhere:redEdges[i] = [ai, bi]indicates that there is a directed red edge from nodeaito nodebiin the graph, andblueEdges[j] = [uj, vj]indicates that there is a directed blue edge from nodeujto nodevjin the graph.Return an arrayanswerof lengthn, where eachanswer[x]is the length of the shortest path from node0to nodexsuch that the edge colors alternate along the path, or-1if such a path does not exist.Example 1:Input:n = 3, redEdges = [[0,1],[1,2]], blueEdges = []Output:[0,1,-1]Example 2:Input:n = 3, redEdges = [[0,1]], blueEdges = [[2,1]]Output:[0,1,-1]Constraints:1 <= n <= 1000 <= redEdges.length,Â blueEdges.length <= 400redEdges[i].length == blueEdges[j].length == 20 <= ai, bi, uj, vj< n