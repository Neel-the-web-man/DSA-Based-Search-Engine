You are given a0-indexedarray of integersnumsof lengthn. You are initially positioned atnums[0].Each elementnums[i]represents the maximum length of a forward jump from indexi. In other words, if you are atnums[i], you can jump to anynums[i + j]where:0 <= j <= nums[i]andi + j < nReturnthe minimum number of jumps to reachnums[n - 1]. The test cases are generated such that you can reachnums[n - 1].Example 1:Input:nums = [2,3,1,1,4]Output:2Explanation:The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.Example 2:Input:nums = [2,3,0,1,4]Output:2Constraints:1 <= nums.length <= 1040 <= nums[i] <= 1000It's guaranteed that you can reachnums[n - 1].