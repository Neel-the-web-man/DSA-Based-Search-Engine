You are given a stringsand an array of stringswords. All the strings ofwordsare ofthe same length.Aconcatenated stringis a string that exactly contains all the strings of any permutation ofwordsconcatenated.For example, ifwords = ["ab","cd","ef"], then"abcdef","abefcd","cdabef","cdefab","efabcd", and"efcdab"are all concatenated strings."acdbef"is not a concatenated string because it is not the concatenation of any permutation ofwords.Return an array ofthe starting indicesof all the concatenated substrings ins. You can return the answer inany order.Example 1:Input:s = "barfoothefoobarman", words = ["foo","bar"]Output:[0,9]Explanation:The substring starting at 0 is"barfoo". It is the concatenation of["bar","foo"]which is a permutation ofwords.The substring starting at 9 is"foobar". It is the concatenation of["foo","bar"]which is a permutation ofwords.Example 2:Input:s = "wordgoodgoodgoodbestword", words = ["word","good","best","word"]Output:[]Explanation:There is no concatenated substring.Example 3:Input:s = "barfoofoobarthefoobarman", words = ["bar","foo","the"]Output:[6,9,12]Explanation:The substring starting at 6 is"foobarthe". It is the concatenation of["foo","bar","the"].The substring starting at 9 is"barthefoo". It is the concatenation of["bar","the","foo"].The substring starting at 12 is"thefoobar". It is the concatenation of["the","foo","bar"].Constraints:1 <= s.length <= 1041 <= words.length <= 50001 <= words[i].length <= 30sandwords[i]consist of lowercase English letters.