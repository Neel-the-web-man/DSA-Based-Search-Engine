You are given a sorted integer arrayarrcontaining1andprimenumbers, where all the integers ofarrare unique. You are also given an integerk.For everyiandjwhere0 <= i < j < arr.length, we consider the fractionarr[i] / arr[j].Returnthekthsmallest fraction considered. Return your answer as an array of integers of size2, whereanswer[0] == arr[i]andanswer[1] == arr[j].Example 1:Input:arr = [1,2,3,5], k = 3Output:[2,5]Explanation:The fractions to be considered in sorted order are:
1/5, 1/3, 2/5, 1/2, 3/5, and 2/3.
The third fraction is 2/5.Example 2:Input:arr = [1,7], k = 1Output:[1,7]Constraints:2 <= arr.length <= 10001 <= arr[i] <= 3 * 104arr[0] == 1arr[i]is aprimenumber fori > 0.All the numbers ofarrareuniqueand sorted instrictly increasingorder.1 <= k <= arr.length * (arr.length - 1) / 2Follow up:Can you solve the problem with better thanO(n2)complexity?