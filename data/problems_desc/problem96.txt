There is an integer arraynumssorted in ascending order (withdistinctvalues).Prior to being passed to your function,numsispossibly rotatedat an unknown pivot indexk(1 <= k < nums.length) such that the resulting array is[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]](0-indexed). For example,[0,1,2,4,5,6,7]might be rotated at pivot index3and become[4,5,6,7,0,1,2].Given the arraynumsafterthe possible rotation and an integertarget, returnthe index oftargetif it is innums, or-1if it is not innums.You must write an algorithm withO(log n)runtime complexity.Example 1:Input:nums = [4,5,6,7,0,1,2], target = 0Output:4Example 2:Input:nums = [4,5,6,7,0,1,2], target = 3Output:-1Example 3:Input:nums = [1], target = 0Output:-1Constraints:1 <= nums.length <= 5000-104<= nums[i] <= 104All values ofnumsareunique.numsis an ascending array that is possibly rotated.-104<= target <= 104