You are implementing a program to use as your calendar. We can add a new event if adding the event will not cause atriple booking.Atriple bookinghappens when three events have some non-empty intersection (i.e., some moment is common to all the three events.).The event can be represented as a pair of integersstartTimeandendTimethat represents a booking on the half-open interval[startTime, endTime), the range of real numbersxsuch thatstartTime <= x < endTime.Implement theMyCalendarTwoclass:MyCalendarTwo()Initializes the calendar object.boolean book(int startTime, int endTime)Returnstrueif the event can be added to the calendar successfully without causing atriple booking. Otherwise, returnfalseand do not add the event to the calendar.Example 1:Input["MyCalendarTwo", "book", "book", "book", "book", "book", "book"]
[[], [10, 20], [50, 60], [10, 40], [5, 15], [5, 10], [25, 55]]Output[null, true, true, true, false, true, true]ExplanationMyCalendarTwo myCalendarTwo = new MyCalendarTwo();
myCalendarTwo.book(10, 20); // return True, The event can be booked. 
myCalendarTwo.book(50, 60); // return True, The event can be booked. 
myCalendarTwo.book(10, 40); // return True, The event can be double booked. 
myCalendarTwo.book(5, 15);  // return False, The event cannot be booked, because it would result in a triple booking.
myCalendarTwo.book(5, 10); // return True, The event can be booked, as it does not use time 10 which is already double booked.
myCalendarTwo.book(25, 55); // return True, The event can be booked, as the time in [25, 40) will be double booked with the third event, the time [40, 50) will be single booked, and the time [50, 55) will be double booked with the second event.Constraints:0 <= start < end <= 109At most1000calls will be made tobook.